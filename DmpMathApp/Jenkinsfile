pipeline{
    agent any
	def testImage
	
	tools {
		maven 'Maven352'
	}
	
	stages{
		stage('Checkout'){
			steps {
				git 'https://github.com/shaktipp/dmpRepo.git'
			}			
		}		
		stage('Build') {
			steps {
				sh 'mvn -f DmpMathApp/pom.xml clean compile'
			}					
		}
		stage('Test') {
			steps {
				sh 'mvn -f DmpMathApp/pom.xml test'
				junit '**/target/surefire-reports/TEST-*.xml'
				archive 'target/*.jar'
			}
		}
		stage('Package') {
			steps {
				sh 'mvn -f DmpMathApp/pom.xml package'
			}
		}		
		stage('Sonar Scan') {
			steps {
				sh 'mvn -f DmpMathApp/pom.xml sonar:sonar'
			}
		}
		
		stage('Build image') {
			/* This builds the actual image; synonymous to
			 * docker build on the command line */

			testImage = docker.build("math-image:${env.BUILD_ID}", "./dmp/docker")
		}
		stage('Push image') {
			/* Finally, we'll push the image with two tags:
			 * First, the incremental build number from Jenkins
			 * Second, the 'latest' tag.
			 * Pushing multiple tags is cheap, as all the layers are reused. */
			docker.withRegistry('https://registry.hub.docker.com', 'GitHub_SPP') {
				app.push("${testImage.BUILD_NUMBER}")
				app.push("latest")
			}
		}
		
	}
}
